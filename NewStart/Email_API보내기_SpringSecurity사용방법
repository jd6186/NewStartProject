[Email API 사용하기]
1. Dependency 설정해주기
	1) "java mail"은  API를 통해서 Spring에서 메일을 보낼 수 있도록 하는 라이브러리이다.

	2) java mail API와 이걸 spring으로 받아줄 수 있는 spring-context-support가 둘다 필요하다.
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>${springframework}</version>
		</dependency>





2. Controller에서 값 받아서 넘겨주기
	1) 메일 발송하기 기능 구현한 메서드를 만든다.
	
	2) parameter의 종류 
		(1) HttpServletResponse 
			PrintWriter객체를 활용해 Document 즉, HTML에  response.getWriter();를 이용해 값을 집어넣기 위해 사용
			여기서는 "<script></script>"를 삽입해 기능이 작동되게 만든다.
		(2) String타입 변수들
			toEmail : 상대방 이메일 주소를 의미
			title : 이메일을 보낼 제목
			content : 이메일 본문 내용
	
	3) @RequestMapping을 잡아주기  이 때 RequestMethod의 타입은 POST방식으로 잡아주면 된다.
	
	4) log를 찍고 싶으면 찍어주면 된다.
	
	5) MimeMessageHelper 객체에 사용할 변수들을 설정해주기
		내 이메일 주소, ex) String setFrom = "wjdehd7991@gmail.com";
		내용이 들어갈 content 부분 스타일 설정할 내용, ex) String newContent = "<h1 style='color:lime;'>"+content+"</h1>";
		MimeMessage객체 변수에 mailsender.createMimeMessage();를 값으로 지정해주기
	
	6) MimeMessageHelper객체를 인스턴스시켜 정보 보내기 
		이 때 argument는 (MimeMessage 변수를 잡아놨던 것, 파일 전송 여부(true, false로 잡아주기), encoding타입지정("UTF-8"))시켜주기 
		그리고 기본적으로 파일 전송을 하기 때문에 IOException이 발생수 있다 해당 내용은 throws로 던져주기. 
		MessagingException은 반드시 성공 결과를 알아봐야하기 때문에 try~catch블럭으로 잡아주기
		FileSystemResource 객체를 만들어서 어디에 존재하는 파일을 전송할 것인지 결정하기, 파일이름 설정, FileSystemResource 변수
		MimeMessageHelper에 addAttachment메서드를 이용해 ("보낼 파일명을 지정", FileSystemResource객체 변수명 넣기)
		@Autowired로 JavaMailSender를 받아주기
		JavaMailSender의 메서드 중 send메서드에 MimeMessage변수를 담아보내기
		남은 데이터를 플러쉬 시켜주기





[Security API 사용하기]




































































































































































































































































































































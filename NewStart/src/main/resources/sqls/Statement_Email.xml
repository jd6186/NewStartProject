<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.start.pro.email">



<!-- 인증 이메일 -->

<!--인증 이메일 발송하면서 정보 입력-->
<insert id="sendLJ" parameterType="java.util.Map">
INSERT INTO LJ_EMAIL
(LJ_CODE, USER_EMAIL, LJ_KEY, REGDATE)
VALUES(#{lj_code} ,#{user_email}, #{lj_key}, NOW())
</insert>
 <!--  ok -->


<!-- 유저 인증받기 -->
<select id="LJKey" parameterType="java.util.Map" resultType="java.lang.String">
SELECT LJ_CODE
 FROM LJ_EMAIL
  WHERE USER_EMAIL = #{user_email} AND LJ_KEY = #{lj_key}
</select>
<!-- ok -->
<!--생성일시부터 1년 지난거 데이터 삭제 -->
 <delete id="DelLJ">
 <![CDATA[DELETE FROM LJ_EMAIL
    WHERE LJ_SEQ = (SELECT LJ_SEQ 
         FROM LJ_EMAIL le 
             WHERE (REGDATE + (INTERVAL '1' YEAR)) <= SYSDATE)]]>
 </delete>
 

<!-- 문의 답변 이메일  -->

<!--문의 답변 정보들 입력-->
<insert id="SendReply" parameterType="MDto">
INSERT INTO R_EMAIL
 (MOUNUI_SEQ, TITLE, CONTENT, SUCCESSCHK ,REGDATE, FILECHK)
  VALUES(#{mounui_seq}, #{title}, #{content}, #{successchk} ,NOW(),  #{filechk}) 
</insert>
<!--ok -->


<!--문의글 seq로 문의 답변 정보 조회-->
<select id="selReplyAemail" parameterType="java.lang.String" resultType="MDto">
SELECT MOUNUI_SEQ, TITLE, CONTENT,  REGDATE
 FROM R_EMAIL re
  WHERE MOUNUI_SEQ = #{mounui_seq}
</select>
<!-- ok -->




<!-- 자동 이메일  -->

<!--처음 카테고리 코드에 따라 정보 입력-->
<insert id="SetAutoEmail" parameterType="EmailDto">
INSERT INTO AUTO_EMAIL
(CATEGORY_CODE, EMAIL_TITLE, EMAIL_CONTENT, FILECHK, REGDATE, USE_CHK)
VALUES(0, #{email_title}, #{email_content} , #{filechk}, NOW(), #{use_chk})
</insert>
<!--OK  -->


<!--카테고리 코드에 의해 정보 수정-->
<update id="UpdateAuto" parameterType="EmailDto">
UPDATE AUTO_EMAIL
SET EMAIL_TITLE=#{email_title}, EMAIL_CONTENT=#{email_content}, FILECHK=#{filechk}, REGDATE=NOW(), USE_CHK=#{use_chk}
WHERE CATEGORY_CODE=#{category_code}
</update>
<!--OK  -->


<!--등록된 글 전체 조회-->
 <select id="SelAuto" resultType="EmailDto">
 SELECT CATEGORY_CODE,
 CASE WHEN LENGTH(EMAIL_TITLE)>10 THEN CONCAT(SUBSTR(EMAIL_TITLE,1,10), '...') ELSE EMAIL_TITLE END AS EMAIL_TITLE ,
 USE_CHK FROM AUTO_EMAIL ae
 </select>
 <!-- OK -->
 
 <!--카테고리 코드별로 글 상세조회-->
 <select id="SelDetailAuto" parameterType="java.lang.String" resultType="EmailDto">
 SELECT CATEGORY_CODE, EMAIL_TITLE, EMAIL_CONTENT,FILECHK, USE_CHK FROM AUTO_EMAIL ae 
 WHERE CATEGORY_CODE = #{category_code}
 </select>
  <!-- OK -->
  
  
<!--발송할 때 정보 가져오기 --> 
<select id="getEmailInfo" parameterType="java.lang.String" resultType="EmailDto">
 SELECT CATEGORY_CODE, EMAIL_TITLE, EMAIL_CONTENT, FILECHK FROM AUTO_EMAIL ae 
    WHERE CATEGORY_CODE = #{category_code}
     AND USE_CHK = 'Y'
</select>
  <!-- OK -->
  
 <!-- 이메일 발송 이력  -->
 
 <!-- 메일 보낼때 정보 입력-->
 <insert id="SendEmail" parameterType="EmailDto">
 INSERT INTO EMAIL_SAVE 
 (BOARD_CODE, CATEGORY_CODE, EMAIL_TITLE, 
 EMAIL_CONTENT, FILECHK, USER_EMAIL, SUCCESSCHK, REGDATE, FILTER)
   VALUES(002,#{category_code} , #{email_title}, 
    #{email_content}, #{filechk}, #{user_email}, #{successchk}, NOW(), #{filter})
 <selectKey order="AFTER" resultType="java.lang.String" keyProperty="email_seq">
    SELECT MAX(`EMAIL_SEQ` ) AS EMAIL_SEQ FROM EMAIL_SAVE
 </selectKey>
  </insert> 
 
 <!-- ok  -->
 
 
 
 <!-- 메일 성공/ 실패--> 
 <update id="MailSuccess" parameterType="java.util.Map">
  UPDATE EMAIL_SAVE SET SUCCESSCHK = #{successchk}
  <if test="fail_reason != null">
     , FAIL_REASON = #{fail_reason}
  </if>
  <if test="user_email != null">
     , USER_EMAIL = #{user_email}
  </if>
    WHERE EMAIL_SEQ = #{email_seq}
 </update>
  <!-- ok   -->
  

<!-- 메일 기록 삭제 -->
<delete id="delemailsave" parameterType="java.util.Map">
DELETE FROM EMAIL_SAVE
   <where>
   EMAIL_SEQ IN
   <foreach collection="seq" item="seq" open="(" close=")" separator=",">
      #{seq}
   </foreach>
   </where>
</delete>
 <!-- ok -->
  
 <!-- 재전송 -->
 <select id="mailresend" parameterType="java.lang.String" resultType="EmailDto">
 SELECT EMAIL_SEQ, CATEGORY_CODE, EMAIL_TITLE, EMAIL_CONTENT, FILECHK, USER_EMAIL
   FROM EMAIL_SAVE es 
      WHERE EMAIL_SEQ = #{email_seq}
 </select> 
  <!-- ok -->
  
 <!--발송일 1년 지난거 데이터 삭제 -->
 <delete id="DelMail">
 DELETE FROM EMAIL_SAVE
 WHERE (TO_CHAR(SYSDATE,'YYYYMMDD') - TO_CHAR(REGDATE,'YYYYMMDD')) >= 10000
 </delete>
 
 
 <!--전체 발송 이력 조회-->
<select id="SelAllMail" parameterType="FilterDto" resultType="EmailDto">
SELECT   e.EMAIL_SEQ, e.CATEGORY_CODE, e.EMAIL_TITLE, e.USER_EMAIL, e.SUCCESSCHK, e.REGDATE   
   FROM (SELECT EMAIL_SEQ, CATEGORY_CODE, 
 CASE WHEN LENGTH(EMAIL_TITLE)>10 THEN CONCAT(SUBSTR(EMAIL_TITLE,1,10), '....') ELSE EMAIL_TITLE END AS EMAIL_TITLE
 , USER_EMAIL, SUCCESSCHK, REGDATE, `FILTER`, @ROWNUM := @ROWNUM + 1 AS RNUM 
 FROM EMAIL_SAVE es, (SELECT @ROWNUM := 0) r
 <include refid="filter"/>
  ) e 
    order by RNUM desc limit ${start}, ${last}
</select>
<!--  ok -->





<!-- 글 전체 갯수  -->
<select id="getEmailCount" parameterType="FilterDto" resultType="java.lang.String">
   SELECT COUNT(*) FROM EMAIL_SAVE es 
   <if test="_parameter != null">
   <include refid="filter"/>
   </if>
</select>
<!-- OK -->


<sql id="filter">
      <where>
      <if test="filter != null and filter != ''">
      "FILTER" = ''''||${filter}||'''' 
      </if>
      <if test="successchk != null and successchk.size > 0">
      AND SUCCESSCHK IN 
      <foreach collection="successchk" item="successchk" open="(" close=")" separator=",">
            #{successchk}
         </foreach>
      </if>
      <if test="firstDate != null and firstDate != ''">
        <![CDATA[AND REGDATE >= #{firstDate}]]>
      </if>
      <if test="lastDate != null and lastDate != ''">
        <![CDATA[AND REGDATE <= #{lastDate}]]>
      </if>
   </where>

</sql>



<!-- 발송 이력 상세 조회-->
<select id="SelMailDetail" parameterType="java.lang.String" resultType="EmailDto">
SELECT EMAIL_SEQ,CATEGORY_CODE, EMAIL_TITLE, EMAIL_CONTENT, FILECHK, USER_EMAIL, SUCCESSCHK,FAIL_REASON , REGDATE 
 FROM EMAIL_SAVE es 
  WHERE EMAIL_SEQ = #{email_seq}
</select>
<!-- ok -->

<!-- 수동 이메일 -->

<!--필터에 따라서 회원 유저 이메일 정보 받아오기 -->
<select id="SelUserFiter" parameterType="java.util.Map" resultType="java.lang.String">
SELECT USER_EMAIL FROM USER u 
   <where>
      <if test="user_grade != null">
         USER_GRADE IN (${user_grade})
      </if>
   </where>
</select>
<!-- ok -->


<select id="getinfo" parameterType="java.lang.String" resultType="UserDto">
SELECT USER_NAME, USER_NICKNAME FROM USER u  WHERE USER_EMAIL = #{email}
</select>
<!-- ok -->
</mapper>